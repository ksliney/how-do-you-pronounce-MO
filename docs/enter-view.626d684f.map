{"version":3,"sources":["enter-view.js"],"names":["factory","define","amd","module","exports","window","enterView","call","lib","selector","enter","exit","progress","offset","once","raf","ticking","elements","height","updateHeight","cH","document","documentElement","clientHeight","wH","innerHeight","Math","max","updateScroll","targetFromTop","getOffsetHeight","fraction","min","insideIndex","filter","el","rect","entered","getBoundingClientRect","top","__enter_view","length","currentEl","nextEl","progressPct","removeEventListener","onScroll","onResize","onLoad","selectionToArray","selection","len","result","i","push","setupElements","selectAll","parent","querySelectorAll","NodeList","Array","console","error","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","addEventListener"],"mappings":";;AAIA,IAAA,GAAA,SAAWA,GACa,mBAAXC,GAAyBA,EAAOC,IACzCD,EAAOD,GACoB,oBAAXG,QAA0BA,OAAOC,QACjDD,OAAOC,QAAUJ,IAEjBK,OAAOC,UAAYN,EAAQO,KAAK,MANpC,CAQG,WAgIMC,OA/HK,SAAmE,GAAhEC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,OAAAA,OAAS,IAAA,EAAA,EAAsB,EAAnBC,EAAAA,EAAAA,KAAAA,OAAO,IAAA,GAAY,EACzEC,EAAM,KACNC,GAAU,EACVC,EAAW,GACXC,EAAS,EAqBJC,SAAAA,IACDC,IAAAA,EAAKC,SAASC,gBAAgBC,aAC9BC,EAAKnB,OAAOoB,aAAe,EACjCP,EAASQ,KAAKC,IAAIP,EAAII,GAGfI,SAAAA,IACPZ,GAAU,EACJa,IAAAA,EAhBCC,WACHjB,GAAAA,GAA4B,iBAAXA,EAAqB,CAClCkB,IAAAA,EAAWL,KAAKM,IAAIN,KAAKC,IAAI,EAAGd,GAAS,GACxCK,OAAAA,EAASa,EAAWb,EAEtBA,OAAAA,EAWeY,GAiBlBG,GAfJhB,EAAWA,EAASiB,OAAO,SAAAC,GACnBC,IAEAC,EAFOF,EAAGG,wBACCC,IACKV,EAClBQ,GAAAA,IAAYF,EAAGK,cAEb1B,GADJJ,EAAMyB,GACFrB,EAAM,OAAO,OACPuB,GAAWF,EAAGK,cAAgB7B,GACxCA,EAAKwB,GAIA,OAFPA,EAAGK,aAAeH,GAEX,KAGkBH,OAAO,SAAAC,GAAMA,OAAAA,EAAGK,eAAcC,OAAS,EAC9D7B,GAAAA,GAAYqB,EAAchB,EAASwB,SAA0B,GAAhBR,EAAmB,CAC9DS,IAAAA,EAAYzB,EAASgB,GACrBU,EAAS1B,EAASgB,EAAc,GAC9BG,EAAOM,EAAUJ,wBAGnBM,GADef,EAAgBO,EAAKG,KACTH,EAAKlB,OAEhC0B,EAAc,IAAKA,EAAc,GACrChC,EAAS8B,EAAWC,EAAQC,GAGzB3B,EAASwB,QACZpC,OAAOwC,oBAAoB,SAAUC,GAAU,GAI1CA,SAAAA,IACF9B,IACHA,GAAU,EACVD,EAAIa,IAICmB,SAAAA,IACP5B,IACAS,IAGOoB,SAAAA,IACP7B,IACAS,IAGOqB,SAAAA,EAAkBC,GAGpB,IAFCC,IAAAA,EAAMD,EAAUT,OAChBW,EAAS,GACNC,EAAI,EAAGA,EAAIF,EAAKE,GAAK,EAC5BD,EAAOE,KAAKJ,EAAUG,IAEjBD,OAAAA,EAaAG,SAAAA,IACPtC,EAXOuC,SAAW/C,GAAUgD,IAAAA,EAASpC,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAAA,SACjC,MAAoB,iBAAbZ,EACFwC,EAAiBQ,EAAOC,iBAAiBjD,IACvCA,aAAoBkD,SACtBV,EAAiBxC,GACfA,aAAoBmD,MACtBnD,OADF,EAMI+C,CAAU/C,GAWPA,GAAYC,GACdmD,QAAQC,MAAM,uCA9G1B/C,EACEV,OAAO0D,uBACP1D,OAAO2D,6BACP3D,OAAO4D,0BACP5D,OAAO6D,yBACP,SAAUC,GACDC,OAAAA,WAAWD,EAAU,IAAO,KA0GvCZ,IAVAlD,OAAOgE,iBAAiB,SAAUtB,GAAU,GAC5C1C,OAAOgE,iBAAiB,SAAUvB,GAAU,GAC5CzC,OAAOgE,iBAAiB,OAAQrB,GAAQ,GACxCD,IASAnB","file":"enter-view.626d684f.map","sourceRoot":"../src","sourcesContent":["/*\n* enter-view.js is library\n*/\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory)\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = factory()\n  } else {\n    window.enterView = factory.call(this)\n  }\n})(() => {\n  const lib = ({ selector, enter, exit, progress, offset = 0, once = false }) => {\n    let raf = null\n    let ticking = false\n    let elements = []\n    let height = 0\n\n    function setupRaf () {\n      raf =\n        window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function (callback) {\n          return setTimeout(callback, 1000 / 60)\n        }\n    }\n\n    function getOffsetHeight () {\n      if (offset && typeof offset === 'number') {\n        const fraction = Math.min(Math.max(0, offset), 1)\n        return height - fraction * height\n      }\n      return height\n    }\n\n    function updateHeight () {\n      const cH = document.documentElement.clientHeight\n      const wH = window.innerHeight || 0\n      height = Math.max(cH, wH)\n    }\n\n    function updateScroll () {\n      ticking = false\n      const targetFromTop = getOffsetHeight()\n\n      elements = elements.filter(el => {\n        const rect = el.getBoundingClientRect()\n        const top = rect.top\n        const entered = top < targetFromTop\n        if (entered && !el.__enter_view) {\n          enter(el)\n          if (once) return false\n        } else if (!entered && el.__enter_view && exit) {\n          exit(el)\n        }\n        el.__enter_view = entered\n\n        return true\n      })\n\n      let insideIndex = elements.filter(el => el.__enter_view).length - 1\n      if (progress && insideIndex < elements.length && insideIndex != -1) {\n        let currentEl = elements[insideIndex]\n        let nextEl = elements[insideIndex + 1]\n        const rect = currentEl.getBoundingClientRect()\n\n        const progressPx = targetFromTop - rect.top\n        let progressPct = progressPx / rect.height\n\n        if (progressPct > 1) { progressPct = 1 }\n        progress(currentEl, nextEl, progressPct)\n      }\n\n      if (!elements.length) {\n        window.removeEventListener('scroll', onScroll, true)\n      }\n    }\n\n    function onScroll () {\n      if (!ticking) {\n        ticking = true\n        raf(updateScroll)\n      }\n    }\n\n    function onResize () {\n      updateHeight()\n      updateScroll()\n    }\n\n    function onLoad () {\n      updateHeight()\n      updateScroll()\n    }\n\n    function selectionToArray (selection) {\n      const len = selection.length\n      const result = []\n      for (let i = 0; i < len; i += 1) {\n        result.push(selection[i])\n      }\n      return result\n    }\n\n    function selectAll (selector, parent = document) {\n      if (typeof selector === 'string') {\n        return selectionToArray(parent.querySelectorAll(selector))\n      } else if (selector instanceof NodeList) {\n        return selectionToArray(selector)\n      } else if (selector instanceof Array) {\n        return selector\n      }\n    }\n\n    function setupElements () {\n      elements = selectAll(selector)\n    }\n\n    function setupEvents () {\n      window.addEventListener('resize', onResize, true)\n      window.addEventListener('scroll', onScroll, true)\n      window.addEventListener('load', onLoad, true)\n      onResize()\n    }\n\n    function init () {\n      const valid = selector && enter\n      if (!valid) console.error('must set selector and enter options')\n      setupRaf()\n      setupElements()\n      setupEvents()\n      updateScroll()\n    }\n\n    init()\n  }\n\n  return lib\n})\n"]}